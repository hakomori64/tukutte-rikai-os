     1                                  ; エントリーポイント
     2                                  
     3                                  BOOT_LOAD equ 0x7c00
     4                                  
     5                                  org BOOT_LOAD
     6                                  
     7                                  ; ****************************
     8                                  ; マクロ
     9                                  ; ****************************
    10                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist
     2                              <1>     
     3                              <1>     %rep %0 - 1
     4                              <1>         push %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1> 
     8                              <1>     %rotate -1
     9                              <1>         call %1
    10                              <1>     
    11                              <1>     %if 1 < %0
    12                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    11                                  
    12                                  ; ****************************
    13                                  ; エントリーポイント
    14                                  ; ****************************
    15                                  entry:
    16 00000000 EB58                        jmp ipl
    17                                  
    18                                      ; ---------
    19                                      ; BPB (BIOS Parameter Block)
    20                                      ; ---------
    21 00000002 90<rept>                    times 90 - ($ - $$) db 0x90
    22                                  
    23                                      ; ---------
    24                                      ; IPL(Initial Program Loader)
    25                                      ; --------- 
    26                                  
    27                                  ipl:
    28                                      ; BIOSが利用した時の値がそのまま残っているので、セグメントやスタックの値を設定しなおす
    29 0000005A FA                          cli ; セグメントの初期化や割り込みの設定時に割り込みが呼ばれてほしくないので、いったん止める
    30                                  
    31 0000005B B80000                      mov ax, 0x0000
    32 0000005E 8ED8                        mov ds, ax
    33 00000060 8EC0                        mov es, ax
    34 00000062 8ED0                        mov ss, ax
    35 00000064 BC007C                      mov sp, BOOT_LOAD ; スタックはブートローダーが読み込まれた場所から上に伸びていく
    36                                  
    37 00000067 FB                          sti ; 割り込みのうけつけを再開する
    38                                  
    39 00000068 8816[9200]                  mov [BOOT.DRIVE], dl ; ドライブ番号の保存
    40                                  
    41                                      ; 文字列を表示
    42 0000006C 68[7A00]E8370083C4-         cdecl puts, .s0
    42 00000074 02                 
    43                                  
    44 00000075 E8D000                      cdecl reboot
    45                                  
    46 00000078 EBFE                        jmp $
    47                                  
    48 0000007A 426F6F74696E672E2E-     .s0 db "Booting...", 0x0A, 0x0D, 0 ; 0x0A = LF, 0x0D = CR
    48 00000083 2E0A0D00           
    49 00000087 2D2D2D2D2D2D2D2D0A-     .s1 db "--------", 0x0A, 0x0D, 0
    49 00000090 0D00               
    50                                  
    51                                  
    52                                  ALIGN 2, db 0
    53                                  BOOT: ; ブートドライブに関する情報
    54 00000092 0000                        .DRIVE dw 0 ; ドライブ番号
    55                                  
    56                                  
    57                                  ; ****************************
    58                                  ; モジュール
    59                                  ; ****************************
    60                                  %include "../modules/real/putc.s"
     1                              <1> ; putc
     2                              <1> ; @params ch (2 bytes) 文字コード
     3                              <1> ; @returns void
     4                              <1> putc:
     5                              <1>     ; スタックフレームの構築
     6 00000094 55                  <1>     push bp
     7 00000095 89E5                <1>     mov bp, sp
     8                              <1> 
     9                              <1>     ;+ 4 | 出力文字
    10                              <1>     ;+ 2 | IP
    11                              <1>     ;+ 0 | BP
    12                              <1> 
    13                              <1>     ; レジスタの保存
    14 00000097 50                  <1>     push ax
    15 00000098 53                  <1>     push bx
    16                              <1> 
    17 00000099 8A4604              <1>     mov al, [bp + 4]
    18 0000009C B40E                <1>     mov ah, 0x0e
    19 0000009E BB0000              <1>     mov bx, 0x0000
    20 000000A1 CD10                <1>     int 0x10
    21                              <1> 
    22                              <1>     ; レジスタの復帰
    23 000000A3 5B                  <1>     pop bx
    24 000000A4 58                  <1>     pop ax
    25                              <1> 
    26                              <1>     ; スタックフレームの破棄
    27 000000A5 89EC                <1>     mov sp, bp
    28 000000A7 5D                  <1>     pop bp
    29                              <1> 
    30 000000A8 C3                  <1>     ret
    61                                  %include "../modules/real/puts.s"
     1                              <1> ; puts
     2                              <1> ; @params address (2 bytes) 表示文字列へのアドレス
     3                              <1> ; @returns void
     4                              <1> 
     5                              <1> puts:
     6                              <1>     ; スタックフレームの構築
     7 000000A9 55                  <1>     push bp
     8 000000AA 89E5                <1>     mov bp, sp
     9                              <1> 
    10                              <1>     ; + 4 | 文字列へのアドレス
    11                              <1>     ; + 2 | IP
    12                              <1>     ; + 0 | BP
    13                              <1>     
    14                              <1>     ; レジスタの保存
    15 000000AC 50                  <1>     push ax
    16 000000AD 53                  <1>     push bx
    17 000000AE 56                  <1>     push si
    18                              <1> 
    19                              <1>     ; save arguments
    20 000000AF 8B7604              <1>     mov si, [bp + 4]
    21                              <1> 
    22 000000B2 B40E                <1>     mov ah, 0x0e   ; テレタイプ式1文字出力
    23 000000B4 BB0000              <1>     mov bx, 0x0000 ; ページ番号と文字色を0に設定
    24 000000B7 FC                  <1>     cld ; DF = 0
    25                              <1> 
    26                              <1> .10L:
    27 000000B8 AC                  <1>     lodsb ; al = *si++;
    28                              <1> 
    29 000000B9 3C00                <1>     cmp al, 0
    30 000000BB 7404                <1>     je .10E
    31                              <1> 
    32 000000BD CD10                <1>     int 0x10
    33 000000BF EBF7                <1>     jmp .10L
    34                              <1> 
    35                              <1> .10E:
    36                              <1> 
    37                              <1>     ; restore registers
    38 000000C1 5E                  <1>     pop si
    39 000000C2 5B                  <1>     pop bx
    40 000000C3 58                  <1>     pop ax
    41                              <1> 
    42                              <1>     ; discard stack frame
    43                              <1> 
    44 000000C4 89EC                <1>     mov sp, bp
    45 000000C6 5D                  <1>     pop bp
    46                              <1> 
    47 000000C7 C3                  <1>     ret
    62                                  %include "../modules/real/itoa.s"
     1                              <1> ; itoa
     2                              <1> ; @params
     3                              <1> ;   num: 変換する値
     4                              <1> ;   buff: 保存先アドレス
     5                              <1> ;   size: 保存先バッファサイズ
     6                              <1> ;   radix: 基数(2 or 8 or 10 or 16)
     7                              <1> ;   flags: ビット定義のフラグ
     8                              <1> ;       B2: 空白を0で埋める
     9                              <1> ;       B1: '+/-'記号を付加する
    10                              <1> ;       B0: 値を符号付き変数として扱う
    11                              <1> 
    12                              <1> itoa:
    13                              <1>     ; stack frame
    14 000000C8 55                  <1>     push bp
    15 000000C9 89E5                <1>     mov bp, sp
    16                              <1> 
    17                              <1>     ; + 12 | flags
    18                              <1>     ; + 10 | 基数
    19                              <1>     ; +  8 | 保存先バッファサイズ
    20                              <1>     ; +  6 | 保存先アドレス
    21                              <1>     ; +  4 | 変換する値
    22                              <1>     ; +  2 | IP
    23                              <1>     ; +  0 | BP
    24                              <1> 
    25                              <1>     ; save registers
    26 000000CB 50                  <1>     push ax
    27 000000CC 53                  <1>     push bx
    28 000000CD 51                  <1>     push cx
    29 000000CE 52                  <1>     push dx
    30 000000CF 56                  <1>     push si
    31 000000D0 57                  <1>     push di
    32                              <1> 
    33                              <1>     ; 引数を取得
    34 000000D1 8B4604              <1>     mov ax, [bp + 4]
    35 000000D4 8B7606              <1>     mov si, [bp + 6]
    36 000000D7 8B4E08              <1>     mov cx, [bp + 8]
    37                              <1> 
    38 000000DA 89F7                <1>     mov di, si
    39 000000DC 01CF                <1>     add di, cx ; dst = &dst[size - 1]
    40 000000DE 4F                  <1>     dec di
    41                              <1> 
    42 000000DF 8B5E0C              <1>     mov bx, word [bp + 12] ; flags = オプション
    43                              <1> 
    44                              <1>     ; 符号付き数値として扱うかを判定する
    45                              <1>     ; もし負の数だったらB1をtrueにする
    46 000000E2 F7C30100            <1>     test bx, 0b0001
    47                              <1> .10Q:
    48 000000E6 7408                <1>     je .10E ; ZF = 0(先のtest演算の結果が0になっていたら、つまり、オプションが無効であればスキップ)
    49 000000E8 83F800              <1>     cmp ax, 0 ; if num < 0
    50 000000EB 7D03                <1>     jge .12E
    51 000000ED 83CB02              <1>     or bx, 0b0010 ; flags |= 2
    52                              <1> .12E:
    53                              <1> .10E:
    54                              <1> 
    55                              <1>     ; 符号を出力するか判定する
    56 000000F0 F7C30200            <1>     test bx, 0b0010
    57                              <1> .20Q:
    58 000000F4 7410                <1>     je .20E
    59 000000F6 83F800              <1>     cmp ax, 0 ; if num < 0
    60                              <1> .22Q:
    61 000000F9 7D07                <1>     jge .22F
    62 000000FB F7D8                <1>     neg ax ; num *= -1
    63 000000FD C6042D              <1>     mov [si], byte '-' ; 符号を表示する
    64 00000100 EB03                <1>     jmp .22E
    65                              <1> .22F:
    66 00000102 C6042B              <1>     mov [si], byte '+'    
    67                              <1> .22E:
    68 00000105 49                  <1>     dec cx ; size--
    69                              <1> .20E:
    70                              <1> 
    71                              <1> 
    72                              <1>     ; ASCII変換
    73 00000106 8B5E0A              <1>     mov bx, [bp + 10] ; 基数
    74                              <1> .30L:
    75 00000109 BA0000              <1>     mov dx, 0
    76                              <1>     ; div
    77                              <1>     ; AX = DX:AX / 基数
    78                              <1>     ; DX = DX:AX % 基数
    79 0000010C F7F3                <1>     div bx
    80                              <1> 
    81 0000010E 89D6                <1>     mov si, dx ; si = 余り
    82 00000110 8A94[3801]          <1>     mov dl, byte [.ascii + si] ; 変換テーブルから、余り(数値)を文字に変換
    83                              <1> 
    84 00000114 8815                <1>     mov [di], dl
    85 00000116 4F                  <1>     dec di
    86                              <1> 
    87 00000117 83F800              <1>     cmp ax, 0
    88 0000011A E0ED                <1>     loopnz .30L ; ax != 0なら.30Lに戻る
    89                              <1> .30E:
    90                              <1> 
    91                              <1> 
    92                              <1>     ; 空欄を埋める
    93 0000011C 83F900              <1>     cmp cx, 0
    94                              <1> .40Q:
    95 0000011F 740D                <1>     je .40E
    96 00000121 B020                <1>     mov al, ' '
    97 00000123 837E0C04            <1>     cmp [bp + 12], word 0b0100
    98 00000127 7502                <1>     jne .42E
    99 00000129 B030                <1>     mov al, '0'
   100                              <1> .42E:
   101 0000012B FD                  <1>     std ; DF = 1 (マイナス方向に伸ばしていく)
   102 0000012C F3AA                <1>     rep stosb ; while (cx > 0) { [di] = al; di--; cx--; }
   103                              <1> .40E:
   104                              <1> 
   105                              <1>     ; レジスタの復元
   106 0000012E 5F                  <1>     pop di
   107 0000012F 5E                  <1>     pop si
   108 00000130 5A                  <1>     pop dx
   109 00000131 59                  <1>     pop cx
   110 00000132 5B                  <1>     pop bx
   111 00000133 58                  <1>     pop ax
   112                              <1> 
   113                              <1>     ; スタックフレームの破棄
   114 00000134 89EC                <1>     mov sp, bp
   115 00000136 5D                  <1>     pop bp
   116                              <1> 
   117 00000137 C3                  <1>     ret
   118                              <1> 
   119 00000138 303132333435363738- <1> .ascii db "0123456789ABCDEF"
   119 00000141 39414243444546      <1>
    63                                  %include "../modules/real/reboot.s"
     1                              <1> ; reboot
     2                              <1> ; @params
     3                              <1> ; @returns
     4                              <1> 
     5                              <1> reboot:
     6                              <1>     ; メッセージを表示
     7 00000148 68[6401]E85BFF83C4- <1>     cdecl puts, .s0
     7 00000150 02                  <1>
     8                              <1> 
     9                              <1>     ; キー入力を待つ
    10                              <1> .10L:
    11 00000151 B410                <1>     mov ah, 0x10 ; Read expanded keyboard character https://en.wikipedia.org/wiki/INT_16H
    12 00000153 CD16                <1>     int 0x16 ; キー入力を待つ
    13                              <1> 
    14 00000155 3C20                <1>     cmp al, ' '
    15 00000157 75F8                <1>     jne .10L
    16                              <1> 
    17                              <1>     ; 改行を出力
    18 00000159 68[8301]E84AFF83C4- <1>     cdecl puts, .s1
    18 00000161 02                  <1>
    19                              <1> 
    20                              <1>     ; 再起動
    21 00000162 CD19                <1>     int 0x19
    22                              <1> 
    23 00000164 0A0D50757368205350- <1> .s0 db 0x0A, 0x0D, "Push SPACE key to reboot....", 0
    23 0000016D 414345206B65792074- <1>
    23 00000176 6F207265626F6F742E- <1>
    23 0000017F 2E2E2E00            <1>
    24 00000183 0A0D0A0D00          <1> .s1 db 0x0A, 0x0D, 0x0A, 0x0D, 0
    64                                  
    65                                  ; ****************************
    66                                  ; ブートフラグ
    67                                  ; ****************************
    68 00000188 00<rept>                    times 510 - ($ - $$) db 0x00
    69 000001FE 55AA                        db 0x55, 0xaa
