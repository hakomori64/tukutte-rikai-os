     1                                  ; ****************************
     2                                  ; マクロ
     3                                  ; ****************************
     4                                  %include "../include/define.s"
     1                              <1> BOOT_LOAD equ 0x7c00 ; ブートプログラムのロード位置
     2                              <1> 
     3                              <1> BOOT_SIZE equ (1024 * 8) ; ブートプログラムのサイズ
     4                              <1> SECT_SIZE equ (512) ; セクタサイズ
     5                              <1> BOOT_SECT equ (BOOT_SIZE / SECT_SIZE) ;ブートプログラムのセクタ数
     5                                  %include "../include/macro.s"
     1                              <1> struc drive
     2 00000000 <res 00000002>      <1>     .no     resw 1 ; ドライブ番号
     3 00000002 <res 00000002>      <1>     .cyln   resw 1 ; シリンダ
     4 00000004 <res 00000002>      <1>     .head   resw 1 ; ヘッド
     5 00000006 <res 00000002>      <1>     .sect   resw 1 ; セクタ
     6                              <1> endstruc
     7                              <1> 
     8                              <1> %macro cdecl 1-*.nolist
     9                              <1>     
    10                              <1>     %rep %0 - 1
    11                              <1>         push %{-1:-1}
    12                              <1>         %rotate -1
    13                              <1>     %endrep
    14                              <1> 
    15                              <1>     %rotate -1
    16                              <1>         call %1
    17                              <1>     
    18                              <1>     %if 1 < %0
    19                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)
    20                              <1>     %endif
    21                              <1> 
    22                              <1> %endmacro
     6                                  
     7                                  org BOOT_LOAD
     8                                  
     9                                  ; ****************************
    10                                  ; エントリーポイント
    11                                  ; ****************************
    12                                  entry:
    13 00000000 EB58                        jmp ipl
    14                                  
    15                                      ; ---------
    16                                      ; BPB (BIOS Parameter Block)
    17                                      ; ---------
    18 00000002 90<rept>                    times 90 - ($ - $$) db 0x90
    19                                  
    20                                      ; ---------
    21                                      ; IPL(Initial Program Loader)
    22                                      ; --------- 
    23                                  
    24                                  ipl:
    25                                      ; BIOSが利用した時の値がそのまま残っているので、セグメントやスタックの値を設定しなおす
    26 0000005A FA                          cli ; セグメントの初期化や割り込みの設定時に割り込みが呼ばれてほしくないので、いったん止める
    27                                  
    28 0000005B B80000                      mov ax, 0x0000
    29 0000005E 8ED8                        mov ds, ax
    30 00000060 8EC0                        mov es, ax
    31 00000062 8ED0                        mov ss, ax
    32 00000064 BC007C                      mov sp, BOOT_LOAD ; スタックはブートローダーが読み込まれた場所から上に伸びていく
    33                                  
    34 00000067 FB                          sti ; 割り込みのうけつけを再開する
    35                                  
    36 00000068 8816[BA00]                  mov [BOOT + drive.no], dl ; ドライブ番号の保存
    37                                  
    38                                      ; 文字列を表示
    39 0000006C 68[9900]E8500083C4-         cdecl puts, .s0
    39 00000074 02                 
    40                                  
    41                                      ; ハードディスクから、512~を読み出す
    42 00000075 BB0F00                      mov bx, BOOT_SECT - 1 ; 残りのブートセクタ数
    43 00000078 B9007E                      mov cx, BOOT_LOAD + SECT_SIZE ; 次にロードされるべきアドレス
    44                                  
    45 0000007B 515368[BA00]E89E00-         cdecl read_chs, BOOT + drive, bx, cx
    45 00000083 83C406             
    46                                  
    47 00000086 39D8                        cmp ax, bx
    48                                  .10Q:
    49 00000088 740C                        jz .10E ; 指定したサイズだけ読み出しができていればよし
    50                                  .10T:
    51                                      ; そうでなかったら再起動
    52 0000008A 68[A600]E8320083C4-         cdecl puts, .e0
    52 00000092 02                 
    53 00000093 E84B00                      call reboot
    54                                  .10E:
    55 00000096 E96701                      jmp stage_2
    56                                  
    57 00000099 426F6F74696E672E2E-     .s0 db "Booting...", 0x0A, 0x0D, 0 ; 0x0A = LF, 0x0D = CR
    57 000000A2 2E0A0D00           
    58 000000A6 4572726F723A207365-     .e0 db "Error: sector read", 0
    58 000000AF 63746F722072656164-
    58 000000B8 00                 
    59                                  
    60                                  
    61 000000B9 00                      ALIGN 2, db 0
    62                                  BOOT: ; ブートドライブに関する情報
    63                                      istruc drive
    64 000000BA 0000                            at drive.no,    dw 0
    65 000000BC 0000                            at drive.cyln,  dw 0
    66 000000BE 0000                            at drive.head,  dw 0
    67 000000C0 0200                            at drive.sect,  dw 2
    68                                      iend
    69                                  
    70                                  
    71                                  ; ****************************
    72                                  ; モジュール
    73                                  ; ****************************
    74                                  %include "../modules/real/puts.s"
     1                              <1> ; puts
     2                              <1> ; @params address (2 bytes) 表示文字列へのアドレス
     3                              <1> ; @returns void
     4                              <1> ; @example
     5                              <1> ; cdecl puts, .s0
     6                              <1> 
     7                              <1> puts:
     8                              <1>     ; スタックフレームの構築
     9 000000C2 55                  <1>     push bp
    10 000000C3 89E5                <1>     mov bp, sp
    11                              <1> 
    12                              <1>     ; + 4 | 文字列へのアドレス
    13                              <1>     ; + 2 | IP
    14                              <1>     ; + 0 | BP
    15                              <1>     
    16                              <1>     ; レジスタの保存
    17 000000C5 50                  <1>     push ax
    18 000000C6 53                  <1>     push bx
    19 000000C7 56                  <1>     push si
    20                              <1> 
    21                              <1>     ; save arguments
    22 000000C8 8B7604              <1>     mov si, [bp + 4]
    23                              <1> 
    24 000000CB B40E                <1>     mov ah, 0x0e   ; テレタイプ式1文字出力
    25 000000CD BB0000              <1>     mov bx, 0x0000 ; ページ番号と文字色を0に設定
    26 000000D0 FC                  <1>     cld ; DF = 0
    27                              <1> 
    28                              <1> .10L:
    29 000000D1 AC                  <1>     lodsb ; al = *si++;
    30                              <1> 
    31 000000D2 3C00                <1>     cmp al, 0
    32 000000D4 7404                <1>     je .10E
    33                              <1> 
    34 000000D6 CD10                <1>     int 0x10
    35 000000D8 EBF7                <1>     jmp .10L
    36                              <1> 
    37                              <1> .10E:
    38                              <1> 
    39                              <1>     ; restore registers
    40 000000DA 5E                  <1>     pop si
    41 000000DB 5B                  <1>     pop bx
    42 000000DC 58                  <1>     pop ax
    43                              <1> 
    44                              <1>     ; discard stack frame
    45                              <1> 
    46 000000DD 89EC                <1>     mov sp, bp
    47 000000DF 5D                  <1>     pop bp
    48                              <1> 
    49 000000E0 C3                  <1>     ret
    75                                  %include "../modules/real/reboot.s"
     1                              <1> ; reboot
     2                              <1> ; @params
     3                              <1> ; @returns
     4                              <1> ; @example
     5                              <1> ;   cdecl reboot
     6                              <1> 
     7                              <1> reboot:
     8                              <1>     ; メッセージを表示
     9 000000E1 68[FD00]E8DBFF83C4- <1>     cdecl puts, .s0
     9 000000E9 02                  <1>
    10                              <1> 
    11                              <1>     ; キー入力を待つ
    12                              <1> .10L:
    13 000000EA B410                <1>     mov ah, 0x10 ; Read expanded keyboard character https://en.wikipedia.org/wiki/INT_16H
    14 000000EC CD16                <1>     int 0x16 ; キー入力を待つ
    15                              <1> 
    16 000000EE 3C20                <1>     cmp al, ' '
    17 000000F0 75F8                <1>     jne .10L
    18                              <1> 
    19                              <1>     ; 改行を出力
    20 000000F2 68[1C01]E8CAFF83C4- <1>     cdecl puts, .s1
    20 000000FA 02                  <1>
    21                              <1> 
    22                              <1>     ; 再起動
    23 000000FB CD19                <1>     int 0x19
    24                              <1> 
    25 000000FD 0A0D50757368205350- <1> .s0 db 0x0A, 0x0D, "Push SPACE key to reboot....", 0
    25 00000106 414345206B65792074- <1>
    25 0000010F 6F207265626F6F742E- <1>
    25 00000118 2E2E2E00            <1>
    26 0000011C 0A0D0A0D00          <1> .s1 db 0x0A, 0x0D, 0x0A, 0x0D, 0
    76                                  %include "../modules/real/read_chs.s"
     1                              <1> ; read_chs
     2                              <1> ; @params
     3                              <1> ;   drive: drive構造体のアドレス
     4                              <1> ;   sect: 読み出しセクタ数
     5                              <1> ;   dst: 読み出し先アドレス
     6                              <1> ; @returns
     7                              <1> ;   ax: 読み出したセクタ数
     8                              <1> ; @example
     9                              <1> ;   cdecl read_chs, read_chs, BOOT + drive, BOOT_SECT - 1, BOOT_LOAD + SECT_SIZE
    10                              <1> 
    11                              <1> read_chs:
    12                              <1>     ; スタックフレームの構築
    13                              <1> 
    14 00000121 55                  <1>     push bp
    15 00000122 89E5                <1>     mov bp, sp
    16 00000124 6A03                <1>     push 3 ; リトライ回数
    17 00000126 6A00                <1>     push 0 ; 読み込みセクタ数
    18                              <1> 
    19                              <1>     ;+ 8 | 読み出し先アドレス
    20                              <1>     ;+ 6 | 読み出しセクタ数
    21                              <1>     ;+ 4 | drive構造体のアドレス
    22                              <1>     ;+ 2 | IP
    23                              <1>     ;+ 0 | BP
    24                              <1>     ;- 2 | リトライ回数
    25                              <1>     ;- 4 | 読み込みセクタ数
    26                              <1> 
    27                              <1>     ; レジスタの保存
    28 00000128 53                  <1>     push bx
    29 00000129 51                  <1>     push cx
    30 0000012A 52                  <1>     push dx
    31 0000012B 06                  <1>     push es
    32 0000012C 56                  <1>     push si
    33                              <1> 
    34                              <1>     ; 処理の開始
    35 0000012D 8B7604              <1>     mov si, [bp + 4] ;si = ドライブ構造体のアドレス
    36                              <1> 
    37 00000130 8A6C02              <1>     mov ch, [si + drive.cyln + 0] ; シリンダ番号の下位バイト
    38 00000133 8A4C03              <1>     mov cl, [si + drive.cyln + 1] ; シリンダ番号の上位バイト
    39 00000136 C0E106              <1>     shl cl, 6
    40 00000139 0A4C06              <1>     or cl, [si + drive.sect]
    41                              <1> 
    42                              <1>     ; セクタ読み込み
    43 0000013C 8A7404              <1>     mov dh, [si + drive.head]
    44 0000013F 8A14                <1>     mov dl, [si + drive.no]
    45 00000141 B80000              <1>     mov ax, 0x0000
    46 00000144 8EC0                <1>     mov es, ax
    47 00000146 8B5E08              <1>     mov bx, [bp + 8] ; es(0x0000):bx(読み込み先アドレス)に読み込み
    48                              <1> 
    49                              <1> .10L:
    50 00000149 B402                <1>     mov ah, 0x02
    51 0000014B 8A4606              <1>     mov al, [bp + 6]
    52                              <1> 
    53 0000014E CD13                <1>     int 0x13
    54 00000150 7304                <1>     jnc .11E ; if failed: al = 0 && break
    55                              <1> 
    56 00000152 B000                <1>     mov al, 0
    57 00000154 EB0C                <1>     jmp .10E
    58                              <1> 
    59                              <1> .11E:
    60 00000156 3C00                <1>     cmp al, 0 ; if 読み出したセクタ数 == 0
    61 00000158 7508                <1>     jne .10E
    62                              <1> 
    63 0000015A B80000              <1>     mov ax, 0
    64 0000015D FF4EFE              <1>     dec word [bp - 2]
    65 00000160 75E7                <1>     jnz .10L ; リトライ回数だけリトライ
    66                              <1> 
    67                              <1> .10E:
    68 00000162 B400                <1>     mov ah, 0 ; ステータスは破棄
    69                              <1> 
    70                              <1>     ; レジスタの復帰
    71 00000164 5E                  <1>     pop si
    72 00000165 07                  <1>     pop es
    73 00000166 5A                  <1>     pop dx
    74 00000167 59                  <1>     pop cx
    75 00000168 5B                  <1>     pop bx
    76                              <1> 
    77                              <1>     ; スタックフレームの破棄
    78 00000169 89EC                <1>     mov sp, bp
    79 0000016B 5D                  <1>     pop bp
    80                              <1> 
    81 0000016C C3                  <1>     ret
    77                                  
    78                                  ; ****************************
    79                                  ; ブートフラグ
    80                                  ; ****************************
    81 0000016D 00<rept>                    times 510 - ($ - $$) db 0x00
    82 000001FE 55AA                        db 0x55, 0xaa
    83                                  
    84                                  
    85                                  ; ****************************
    86                                  ; ブート処理の第2ステージ
    87                                  ; ****************************
    88                                  stage_2:
    89                                  
    90                                      ; 文字列を表示
    91 00000200 68[0B02]E8BCFE83C4-         cdecl puts, .s0
    91 00000208 02                 
    92                                  
    93                                      ; 処理の終了
    94 00000209 EBFE                        jmp $
    95                                  
    96                                  .s0:
    97 0000020B 326E64207374616765-         db "2nd stage...", 0x0A, 0x0D, 0
    97 00000214 2E2E2E0A0D00       
    98                                  
    99                                  
   100                                  ; ****************************
   101                                  ; padding (このファイルは8kバイトとする)
   102                                  ; ****************************
   103 0000021A 00<rept>                    times BOOT_SIZE - ($ - $$) db 0
