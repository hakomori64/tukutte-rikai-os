     1                                  ; エントリーポイント
     2                                  
     3                                  BOOT_LOAD equ 0x7c00
     4                                  
     5                                  org BOOT_LOAD
     6                                  
     7                                  ; ****************************
     8                                  ; マクロ
     9                                  ; ****************************
    10                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist
     2                              <1>     
     3                              <1>     %rep %0 - 1
     4                              <1>         push %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1> 
     8                              <1>     %rotate -1
     9                              <1>         call %1
    10                              <1>     
    11                              <1>     %if 1 < %0
    12                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    11                                  
    12                                  ; ****************************
    13                                  ; エントリーポイント
    14                                  ; ****************************
    15                                  entry:
    16 00000000 EB58                        jmp ipl
    17                                  
    18                                      ; ---------
    19                                      ; BPB (BIOS Parameter Block)
    20                                      ; ---------
    21 00000002 90<rept>                    times 90 - ($ - $$) db 0x90
    22                                  
    23                                      ; ---------
    24                                      ; IPL(Initial Program Loader)
    25                                      ; --------- 
    26                                  
    27                                  ipl:
    28                                      ; BIOSが利用した時の値がそのまま残っているので、セグメントやスタックの値を設定しなおす
    29 0000005A FA                          cli ; セグメントの初期化や割り込みの設定時に割り込みが呼ばれてほしくないので、いったん止める
    30                                  
    31 0000005B B80000                      mov ax, 0x0000
    32 0000005E 8ED8                        mov ds, ax
    33 00000060 8EC0                        mov es, ax
    34 00000062 8ED0                        mov ss, ax
    35 00000064 BC007C                      mov sp, BOOT_LOAD ; スタックはブートローダーが読み込まれた場所から上に伸びていく
    36                                  
    37 00000067 FB                          sti ; 割り込みのうけつけを再開する
    38                                  
    39 00000068 8816[4801]                  mov [BOOT.DRIVE], dl ; ドライブ番号の保存
    40                                  
    41                                      ; 文字列を表示
    42 0000006C 68[3001]E8ED0083C4-         cdecl puts, .s0
    42 00000074 02                 
    43                                  
    44                                      ; 数値を表示
    45 00000075 6A016A0A6A0868-             cdecl itoa, 8086, .s1, 8, 10, 0b0001 ; "    8086"
    45 0000007C [3D01]68961FE8FA00-
    45 00000084 83C40A             
    46 00000087 68[3D01]E8D20083C4-         cdecl puts, .s1
    46 0000008F 02                 
    47                                  
    48 00000090 6A036A0A6A0868-             cdecl itoa, 8086, .s1, 8, 10, 0b0011 ; "+   8086"
    48 00000097 [3D01]68961FE8DF00-
    48 0000009F 83C40A             
    49 000000A2 68[3D01]E8B70083C4-         cdecl puts, .s1
    49 000000AA 02                 
    50                                  
    51 000000AB 6A016A0A6A0868-             cdecl itoa, -8086, .s1, 8, 10, 0b0001 ; "-   8086"
    51 000000B2 [3D01]686AE0E8C400-
    51 000000BA 83C40A             
    52 000000BD 68[3D01]E89C0083C4-         cdecl puts, .s1
    52 000000C5 02                 
    53                                  
    54 000000C6 6A016A0A6A0868-             cdecl itoa, -1, .s1, 8, 10, 0b0001 ; "-      1"
    54 000000CD [3D01]6AFFE8AA0083-
    54 000000D5 C40A               
    55 000000D7 68[3D01]E8820083C4-         cdecl puts, .s1
    55 000000DF 02                 
    56                                  
    57 000000E0 6A006A0A6A0868-             cdecl itoa, -1, .s1, 8, 10, 0b0000 ; "   65535"
    57 000000E7 [3D01]6AFFE8900083-
    57 000000EF C40A               
    58 000000F1 68[3D01]E8680083C4-         cdecl puts, .s1
    58 000000F9 02                 
    59                                  
    60 000000FA 6A006A106A0868-             cdecl itoa, -1, .s1, 8, 16, 0b0000 ; "    FFFF"
    60 00000101 [3D01]6AFFE8760083-
    60 00000109 C40A               
    61 0000010B 68[3D01]E84E0083C4-         cdecl puts, .s1
    61 00000113 02                 
    62                                  
    63 00000114 6A046A026A0868-             cdecl itoa, 12, .s1, 8, 2, 0b0100 ; "00001100"
    63 0000011B [3D01]6A0CE85C0083-
    63 00000123 C40A               
    64 00000125 68[3D01]E8340083C4-         cdecl puts, .s1
    64 0000012D 02                 
    65                                  
    66 0000012E EBFE                        jmp $
    67                                  
    68 00000130 426F6F74696E672E2E-     .s0 db "Booting...", 0x0A, 0x0D, 0 ; 0x0A = LF, 0x0D = CR
    68 00000139 2E0A0D00           
    69 0000013D 2D2D2D2D2D2D2D2D0A-     .s1 db "--------", 0x0A, 0x0D, 0
    69 00000146 0D00               
    70                                  
    71                                  
    72                                  ALIGN 2, db 0
    73                                  BOOT: ; ブートドライブに関する情報
    74 00000148 0000                        .DRIVE dw 0 ; ドライブ番号
    75                                  
    76                                  
    77                                  ; ****************************
    78                                  ; モジュール
    79                                  ; ****************************
    80                                  %include "../modules/real/putc.s"
     1                              <1> ; putc
     2                              <1> ; @params ch (2 bytes) 文字コード
     3                              <1> ; @returns void
     4                              <1> putc:
     5                              <1>     ; スタックフレームの構築
     6 0000014A 55                  <1>     push bp
     7 0000014B 89E5                <1>     mov bp, sp
     8                              <1> 
     9                              <1>     ;+ 4 | 出力文字
    10                              <1>     ;+ 2 | IP
    11                              <1>     ;+ 0 | BP
    12                              <1> 
    13                              <1>     ; レジスタの保存
    14 0000014D 50                  <1>     push ax
    15 0000014E 53                  <1>     push bx
    16                              <1> 
    17 0000014F 8A4604              <1>     mov al, [bp + 4]
    18 00000152 B40E                <1>     mov ah, 0x0e
    19 00000154 BB0000              <1>     mov bx, 0x0000
    20 00000157 CD10                <1>     int 0x10
    21                              <1> 
    22                              <1>     ; レジスタの復帰
    23 00000159 5B                  <1>     pop bx
    24 0000015A 58                  <1>     pop ax
    25                              <1> 
    26                              <1>     ; スタックフレームの破棄
    27 0000015B 89EC                <1>     mov sp, bp
    28 0000015D 5D                  <1>     pop bp
    29                              <1> 
    30 0000015E C3                  <1>     ret
    81                                  %include "../modules/real/puts.s"
     1                              <1> ; puts
     2                              <1> ; @params address (2 bytes) 表示文字列へのアドレス
     3                              <1> ; @returns void
     4                              <1> 
     5                              <1> puts:
     6                              <1>     ; スタックフレームの構築
     7 0000015F 55                  <1>     push bp
     8 00000160 89E5                <1>     mov bp, sp
     9                              <1> 
    10                              <1>     ; + 4 | 文字列へのアドレス
    11                              <1>     ; + 2 | IP
    12                              <1>     ; + 0 | BP
    13                              <1>     
    14                              <1>     ; レジスタの保存
    15 00000162 50                  <1>     push ax
    16 00000163 53                  <1>     push bx
    17 00000164 56                  <1>     push si
    18                              <1> 
    19                              <1>     ; save arguments
    20 00000165 8B7604              <1>     mov si, [bp + 4]
    21                              <1> 
    22 00000168 B40E                <1>     mov ah, 0x0e   ; テレタイプ式1文字出力
    23 0000016A BB0000              <1>     mov bx, 0x0000 ; ページ番号と文字色を0に設定
    24 0000016D FC                  <1>     cld ; DF = 0
    25                              <1> 
    26                              <1> .10L:
    27 0000016E AC                  <1>     lodsb ; al = *si++;
    28                              <1> 
    29 0000016F 3C00                <1>     cmp al, 0
    30 00000171 7404                <1>     je .10E
    31                              <1> 
    32 00000173 CD10                <1>     int 0x10
    33 00000175 EBF7                <1>     jmp .10L
    34                              <1> 
    35                              <1> .10E:
    36                              <1> 
    37                              <1>     ; restore registers
    38 00000177 5E                  <1>     pop si
    39 00000178 5B                  <1>     pop bx
    40 00000179 58                  <1>     pop ax
    41                              <1> 
    42                              <1>     ; discard stack frame
    43                              <1> 
    44 0000017A 89EC                <1>     mov sp, bp
    45 0000017C 5D                  <1>     pop bp
    46                              <1> 
    47 0000017D C3                  <1>     ret
    82                                  %include "../modules/real/itoa.s"
     1                              <1> ; itoa
     2                              <1> ; @params
     3                              <1> ;   num: 変換する値
     4                              <1> ;   buff: 保存先アドレス
     5                              <1> ;   size: 保存先バッファサイズ
     6                              <1> ;   radix: 基数(2 or 8 or 10 or 16)
     7                              <1> ;   flags: ビット定義のフラグ
     8                              <1> ;       B2: 空白を0で埋める
     9                              <1> ;       B1: '+/-'記号を付加する
    10                              <1> ;       B0: 値を符号付き変数として扱う
    11                              <1> 
    12                              <1> itoa:
    13                              <1>     ; stack frame
    14 0000017E 55                  <1>     push bp
    15 0000017F 89E5                <1>     mov bp, sp
    16                              <1> 
    17                              <1>     ; + 12 | flags
    18                              <1>     ; + 10 | 基数
    19                              <1>     ; +  8 | 保存先バッファサイズ
    20                              <1>     ; +  6 | 保存先アドレス
    21                              <1>     ; +  4 | 変換する値
    22                              <1>     ; +  2 | IP
    23                              <1>     ; +  0 | BP
    24                              <1> 
    25                              <1>     ; save registers
    26 00000181 50                  <1>     push ax
    27 00000182 53                  <1>     push bx
    28 00000183 51                  <1>     push cx
    29 00000184 52                  <1>     push dx
    30 00000185 56                  <1>     push si
    31 00000186 57                  <1>     push di
    32                              <1> 
    33                              <1>     ; 引数を取得
    34 00000187 8B4604              <1>     mov ax, [bp + 4]
    35 0000018A 8B7606              <1>     mov si, [bp + 6]
    36 0000018D 8B4E08              <1>     mov cx, [bp + 8]
    37                              <1> 
    38 00000190 89F7                <1>     mov di, si
    39 00000192 01CF                <1>     add di, cx ; dst = &dst[size - 1]
    40 00000194 4F                  <1>     dec di
    41                              <1> 
    42 00000195 8B5E0C              <1>     mov bx, word [bp + 12] ; flags = オプション
    43                              <1> 
    44                              <1>     ; 符号付き数値として扱うかを判定する
    45                              <1>     ; もし負の数だったらB1をtrueにする
    46 00000198 F7C30100            <1>     test bx, 0b0001
    47                              <1> .10Q:
    48 0000019C 7408                <1>     je .10E ; ZF = 0(先のtest演算の結果が0になっていたら、つまり、オプションが無効であればスキップ)
    49 0000019E 83F800              <1>     cmp ax, 0 ; if num < 0
    50 000001A1 7D03                <1>     jge .12E
    51 000001A3 83CB02              <1>     or bx, 0b0010 ; flags |= 2
    52                              <1> .12E:
    53                              <1> .10E:
    54                              <1> 
    55                              <1>     ; 符号を出力するか判定する
    56 000001A6 F7C30200            <1>     test bx, 0b0010
    57                              <1> .20Q:
    58 000001AA 7410                <1>     je .20E
    59 000001AC 83F800              <1>     cmp ax, 0 ; if num < 0
    60                              <1> .22Q:
    61 000001AF 7D07                <1>     jge .22F
    62 000001B1 F7D8                <1>     neg ax ; num *= -1
    63 000001B3 C6042D              <1>     mov [si], byte '-' ; 符号を表示する
    64 000001B6 EB03                <1>     jmp .22E
    65                              <1> .22F:
    66 000001B8 C6042B              <1>     mov [si], byte '+'    
    67                              <1> .22E:
    68 000001BB 49                  <1>     dec cx ; size--
    69                              <1> .20E:
    70                              <1> 
    71                              <1> 
    72                              <1>     ; ASCII変換
    73 000001BC 8B5E0A              <1>     mov bx, [bp + 10] ; 基数
    74                              <1> .30L:
    75 000001BF BA0000              <1>     mov dx, 0
    76                              <1>     ; div
    77                              <1>     ; AX = DX:AX / 基数
    78                              <1>     ; DX = DX:AX % 基数
    79 000001C2 F7F3                <1>     div bx
    80                              <1> 
    81 000001C4 89D6                <1>     mov si, dx ; si = 余り
    82 000001C6 8A94[EE01]          <1>     mov dl, byte [.ascii + si] ; 変換テーブルから、余り(数値)を文字に変換
    83                              <1> 
    84 000001CA 8815                <1>     mov [di], dl
    85 000001CC 4F                  <1>     dec di
    86                              <1> 
    87 000001CD 83F800              <1>     cmp ax, 0
    88 000001D0 E0ED                <1>     loopnz .30L ; ax != 0なら.30Lに戻る
    89                              <1> .30E:
    90                              <1> 
    91                              <1> 
    92                              <1>     ; 空欄を埋める
    93 000001D2 83F900              <1>     cmp cx, 0
    94                              <1> .40Q:
    95 000001D5 740D                <1>     je .40E
    96 000001D7 B020                <1>     mov al, ' '
    97 000001D9 837E0C04            <1>     cmp [bp + 12], word 0b0100
    98 000001DD 7502                <1>     jne .42E
    99 000001DF B030                <1>     mov al, '0'
   100                              <1> .42E:
   101 000001E1 FD                  <1>     std ; DF = 1 (マイナス方向に伸ばしていく)
   102 000001E2 F3AA                <1>     rep stosb ; while (cx > 0) { [di] = al; di--; cx--; }
   103                              <1> .40E:
   104                              <1> 
   105                              <1>     ; レジスタの復元
   106 000001E4 5F                  <1>     pop di
   107 000001E5 5E                  <1>     pop si
   108 000001E6 5A                  <1>     pop dx
   109 000001E7 59                  <1>     pop cx
   110 000001E8 5B                  <1>     pop bx
   111 000001E9 58                  <1>     pop ax
   112                              <1> 
   113                              <1>     ; スタックフレームの破棄
   114 000001EA 89EC                <1>     mov sp, bp
   115 000001EC 5D                  <1>     pop bp
   116                              <1> 
   117 000001ED C3                  <1>     ret
   118                              <1> 
   119 000001EE 303132333435363738- <1> .ascii db "0123456789ABCDEF"
   119 000001F7 39414243444546      <1>
    83                                  
    84                                  ; ****************************
    85                                  ; ブートフラグ
    86                                  ; ****************************
    87                                      times 510 - ($ - $$) db 0x00
    88 000001FE 55AA                        db 0x55, 0xaa
